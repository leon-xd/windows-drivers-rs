[workspace]
members = ["crates/*"]
# examples and tests must be excluded from the workspace since only one WDK configuration per build graph is supported.
exclude = [
  "examples/sample-kmdf-driver",
  "examples/sample-umdf-driver",
  "examples/sample-wdm-driver",
  "tests/config-kmdf",
  "tests/config-umdf",
  "tests/config-wdm",
  "tests/wdk-macros-tests",
]
resolver = "2"

[profile.dev]
lto = true

[profile.release]
lto = true

[workspace.package]
edition = "2021"
repository = "https://github.com/microsoft/windows-drivers-rs"
readme = "README.md"
license = "MIT OR Apache-2.0"

[workspace.dependencies]
wdk = { path = "crates/wdk", version = "0.2.0" }
wdk-alloc = { path = "crates/wdk-alloc", version = "0.2.0" }
wdk-build = { path = "crates/wdk-build", version = "0.2.0" }
wdk-macros = { path = "crates/wdk-macros", version = "0.2.0" }
wdk-panic = { path = "crates/wdk-panic", version = "0.2.0" }
wdk-sys = { path = "crates/wdk-sys", version = "0.2.0" }
bindgen = "0.69.4"
fs4 = "0.12.0"
itertools = "0.13.0"
paste = "1.0.15"
proc-macro2 = "1.0.93"
quote = "1.0.38"
scratch = "1.0"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
syn = "2.0.87"
thiserror = "1.0.69"
tracing = "0.1.40"
tracing-subscriber = "0.3.18"
windows = "0.58.0"

# The following workspace.metadata.wdk sections can be uncommented to configure the workspace for a specific WDK configuration (ex. for rust-analyzer to resolve things for a specific configuration)

# Uncomment the section below for KMDF
# [workspace.metadata.wdk.driver-model]
# driver-type = "KMDF"
# umdf-version-major = 1
# target-umdf-version-minor = 33

# Uncomment the section below for UMDF
# [workspace.metadata.wdk.driver-model]
# driver-type = "UMDF"
# umdf-version-major = 1
# target-umdf-version-minor = 33

# WDM
# [workspace.metadata.wdk.driver-model]
# driver-type = "WDM"

# Until https://github.com/rust-lang/cargo/issues/12208 is resolved, each package in the workspace needs to explictly
# add the following block to its Cargo manifest in order to enable these global lint configurations:
#
# [lints]
# workspace = true

[workspace.lints.rust]
missing_docs = "warn"
unsafe_op_in_unsafe_fn = "forbid"

[workspace.lints.clippy]
# Lint Groups
all = "deny"
pedantic = "warn"
nursery = "warn"
cargo = "warn"
# Individual Lints
multiple_unsafe_ops_per_block = "forbid"
undocumented_unsafe_blocks = "forbid"
unnecessary_safety_doc = "forbid"

[workspace.lints.rustdoc]
bare_urls = "warn"
broken_intra_doc_links = "warn"
invalid_codeblock_attributes = "warn"
invalid_html_tags = "warn"
invalid_rust_codeblocks = "warn"
missing_crate_level_docs = "warn"
private_intra_doc_links = "warn"
redundant_explicit_links = "warn"
unescaped_backticks = "warn"
